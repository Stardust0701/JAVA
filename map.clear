map.clear错误的用法
1.
for(Map map:user){
			Map<String, String> userMessage = new HashMap<>();
			userMessage.put("userid", ConvertUtil.convertToString(map.get("id")));
			userMessage.put("message", message);
			//过滤给同一个人发送相同消息的情况
			for(String socket : dataMap1.keySet()){
				if(dataMap1.get(socket).contains(userMessage)){
					userMessage = null;
					break;
				}
			}
			if(userMessage != null){
				if(!dataMap1.containsKey(sockettype)){
					dataMap1.put(sockettype, new ArrayList<Map<String, String>>());
				}
				if(dataMap1.containsKey(sockettype)){
					dataMap1.get(sockettype).add(userMessage);
				}
			}
		}
2.
Map<String, String> userMessage = new HashMap<>();
for(Map map:user){
      userMessage.clear;
			userMessage.put("userid", ConvertUtil.convertToString(map.get("id")));
			userMessage.put("message", message);
			//过滤给同一个人发送相同消息的情况
			for(String socket : dataMap1.keySet()){
				if(dataMap1.get(socket).contains(userMessage)){
					userMessage = null;
					break;
				}
			}
			if(userMessage != null){
				if(!dataMap1.containsKey(sockettype)){
					dataMap1.put(sockettype, new ArrayList<Map<String, String>>());
				}
				if(dataMap1.containsKey(sockettype)){
					dataMap1.get(sockettype).add(userMessage);
				}
			}
		}
    
    第二种方法会报错，原因是Map指针的问题，详见http://blog.csdn.net/Cs_Hu/article/details/53469374
